TEMA
React stateful objects with full SSR and scopeful CSS

RESUMO
Desenvolve o conceito de stateful objects, que soluciona o problema de boilerplate code no tratamento de estado no React, através de um framework com suporte abrangente a renderização server-side e que também corrige o problema de CSS leaking no React.

QUESTÃO
- como resolver a complexidade no tratamento de estados no React
- como resolver o CSS leaking que compromete a SoC no React (scopeless CSS)
- como resolver o server-side rendering sem extender muito a curva de aprendizagem do React

RELEVANCIA
- aproximadamente 80% do desenvolvimento frontend é em React
- tratamento de estado em React é inferior a outras libs
- frameworks React atuais não resolvem esse problema

OBJETIVOS
Solucionar os principais problemas do desenvolvimento com React via um framework moderno, prático e vantajoso para tratar server rendering, stateful handling e scopeless CSS
- apresentar fundamentações conceituais envolvendo a pesquisa
- solucionar ou melhorar o server rendering, stateful handling e scopeless CSS
- demonstrar o framework através de seu uso em um projeto real educacional ja elicitado
- corrigir o problema do scopeless CSS para permitir SoC com a estilização

FUNDAMENTAÇÕES
- ajax: asynchronous javascript
- spa: single-page application
- web components (custom elements)
- react stateful handling
- architectural data flow
- side rendering
- search engine optimization
- hydration algorithm
- partial hydration
- react server component
- component streaming
- dependency injection

METODOLOGIA DE PESQUISA
- revisão da literatura, envolvendos os fundamentos conceituais
- experimentação empírica, caso de uso do software em um aplicação real
- comparação quantitativa do desempenho entre frameworks
- comparação qualitativa da syntaxe entre frameworks

CONTRIBUIÇÕES
+ stateful objects: objetos que encapsulam o tratamento de estado
+ props directives: atributos injetáveis como mixins de elementos
+ delayed render: algoritmo de alto desempenho para stateful objects
+ function decorators: habilitar decorators em função (HOC, SSR, etc)
+ props bindings: diretivas que facilitam elementos de formulários
+ props routing: roteamento declarativo mapeado diretamente nos elementos
+ restful actions: formulários reativos integrados com requisicoes RESTful
+ jsx-in-html: permite importar componente JSX no HTML via <link type='component'>
+ render refocus: recupera o foco no component filho após renderização 'parental' 
+ hookless design: como os principais hooks são substituíveis por stateful objects
  - useState: stateful props
  - useEffect: stateful objects
  - useContext: useStore function
  - useCallback: outside component
  - useMemo: delayed render algorithm
  - useLayoutEffect: não se aplica...
  - useReducer: OOP states

LIMITAÇÕES 
- warnings da IDE com function decorators ( ignorável via //@ts-ignore )
- customs props directive é limitado ( nao suporta 'imports' de modulos )
- implementado para Web (@reactful/web), implementar depois para mobile (@reactful/app)
- import CSS modular sem nao suporta CSS pseudo-selectors (:hover, :active, :etc)

CRONOGOGRAMA
- protótipo 90%
- documentacao 95%
- video (introdução) 100%
- slide (apresentação) 90%